<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Fun | Joey's Blog]]></title>
  <link href="http://xcaptain.github.io/blog/categories/fun/atom.xml" rel="self"/>
  <link href="http://xcaptain.github.io/"/>
  <updated>2015-01-14T00:21:00+00:00</updated>
  <id>http://xcaptain.github.io/</id>
  <author>
    <name><![CDATA[joey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[入手一台二手PC]]></title>
    <link href="http://xcaptain.github.io/blog/2014/11/23/got-an-old-pc/"/>
    <updated>2014-11-23T21:09:30+00:00</updated>
    <id>http://xcaptain.github.io/blog/2014/11/23/got-an-old-pc</id>
    <content type="html"><![CDATA[<p>今天下午在58上面看到一条消息，说的是190出售双核电脑，立即就心动了。作为一个linux，总是忍不住手痒想重装系统，或者是自定义系统，但是因为现在自己手头上只有一台笔记本，实在是不敢轻举妄动，不然把这电脑弄崩溃了，或者是丢失数据了那就损失惨重了。如果有一台空闲的机器那就好了，我可以随便在那台机器上面装系统，可以随意定制。而且有一台局域网内部的PC当作服务器，拿来当测试机很不错，在这里测试过代码之后再上传到线上vps上去。</p>

<p>说干就干，反正190也不贵，现在出去随便找个饭店吃个稍微好点的饭都不止190.给卖家打了电话先问了一下基本的情况，大致确定了消息的真实性，然后就是出发去验货了。那个卖家在东城区，好远啊，看了一下时间都已经3点半了，赶紧出发。又是转公交又是转地铁，终于到了东四北大街，来到了卖家的家里。太震惊了，卖家竟然是一个50多岁的老头，家里很简陋，胡同里很老的房子，但是里面堆满了电脑主机，估计有2,3百台。我要买的那台电脑正开着呢，装着win7系统，正在通过pptv看视频呢。cpu是amd的，1.9GHZ，ddr2内存1G大，网卡是100M的螃蟹卡，这种网卡对于*unix来说几乎都是免驱动的了，使用的太广泛了。剩下的就没什么说了，反正是打算拿来当服务器的，对于显卡没什么要求。</p>

<p>成交之后就抱着这主机又穿过了大半个北京回到了住的地方，累死我了。</p>

<p>回来之后打算装系统，问了一下群里的几个朋友，他们都说要装系统的话必须要有显示器才行。伤心，我还以为有一键安装系统的脚本呢，看来系统是得下周拿到公司去装了。真搞不懂，如果服务器装机也像普通桌面电脑一样的话，那些大公司的运维该多惨，几百台机器得装。</p>

<p>接下来就是得好好想想服务器装什么系统好了，现在vps上跑的是freebsd10,已经连续运行3个多月了，稳定性还可以。但是我自己桌面装的是archlinux，相对来说arch的用法还是比freebsd要简单得多。说到这里又想到这几天debian多位核心开发者离职，好像就是因为debian8要采用systemd的原因。arch很早就用了systemd来管理系统启动进程，导致现在用arch几乎都是傻瓜式了，开启某个软件，安装某个软件，检测某个进程运行状态，都可以通过systemctl来实现。对于*inux的哲学来说还是一个软件只干一件事，对于这种想把什么事都干掉的软件，freebsd是很抵制的。</p>

<p>真搞不懂到底哪种才是对的。</p>

<p>昨天在公司加班终于把zeze的代码部署到git上了。</p>

<p>之前用的版本管理是svn，但是我不太喜欢svn，因为emacs不支持它。我喜欢git，因为emacs对git的支持很好，通过magit我可以很轻松的看到每个版本之间的改动，可以任意提交代码。其实我也不是很熟悉git，但是得慢慢来学，以后git肯定是会取代svn的。</p>

<p>我把svn里面的代码复制到内网测试机之后，<code>git init</code>了这个目录，然后执行初始化提交，然后在本地执行<code>git clone user@host:/project/ ./project</code>把代码拷到了本地，打算在本地改了之后up到服务器上。但是后来我发现我想多了，git不是svn，用svn的这种思路是行不通的，线上的代码和本地的代码是毫无关系的2个分支，本地改了之后提交执行<code>git push</code>是会报错的。</p>

<p>那么什么才是正确的git方式呢？查看了一下git的文档，发现上面说git有一个版本库，克隆这个版本库就能获得最新的版本。</p>

<ol>
<li>先把代码复制到本地，<code>scp -r online_code local_code</code></li>
<li>把本地代码初始化成一个git仓库，<code>git init</code></li>
<li>把本地代码都加入到git版本中，<code>git add .</code></li>
<li>第一次提交代码，<code>git commit -m 'init commit'</code></li>
<li>把本地仓库推送到远程服务器上，<code>git remote add gituser@gitserver:/local_code.git</code>，在执行这步的时候必须确保git服务器上面已经存在local_code.git这个目录，如果不存在的话就得<code>mkdir local_code.git</code></li>
<li>把本地仓库保存的版本都推送到服务器上，<code>git push origin master</code></li>
<li>ssh上git服务器看看，找到local_code.git这个目录，发现里面的文件竟然和本地代码里面<code>local_code/.git/</code>下的内容一模一样</li>
<li>把仓库里的代码克隆到对外访问的环境，因为我是在本地做的测试，所以代码仓库和web服务器是在同一台机器上的，直接执行<code>git clone local_code.git /srv/http/online_code</code>就把版本库里面记录的代码复制出来放到服务器目录了。</li>
</ol>


<p>之前我直接在服务器上写代码，提交代码的时候真是落后，得通过命令行来提交代码，magit没法判断远程服务器上的代码的版本。现在这样就好了，我可以用magit随时commit,随时push，然后只要到<code>/srv/http/online_code/</code>下面<code>git pull</code>就行了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的第一块机械键盘]]></title>
    <link href="http://xcaptain.github.io/blog/2014/11/09/my-first-machanical-keyboard/"/>
    <updated>2014-11-09T17:25:52+00:00</updated>
    <id>http://xcaptain.github.io/blog/2014/11/09/my-first-machanical-keyboard</id>
    <content type="html"><![CDATA[<p>考虑良久，今天终于入手了一块机械键盘。对机械键盘发烧得从上周开始说起，看到一个同事用机械键盘，感觉太爽了，顿时自己也想买一个，然后就是在网上搜相关的信息。</p>

<h3>在网上了解到了很多机械键盘相关的信息，突然发现小小的键盘里面竟然有这么多内幕。</h3>

<ul>
<li><p>对于程序员来说HHKB当然是首选，但是高昂的价格让人望而生畏。</p></li>
<li><p>然后就是传说中的<a href="http://codekeyboards.com/">codekeyboard</a>，不过，这款键盘国内没得卖，而且在国外估计也是小众，还是以后再考虑吧。</p></li>
<li><p>还有一个很牛的键盘叫做<a href="http://www.daskeyboard.com/">daskeyboard</a>，这款键盘的创造者也是一个程序员大牛，具体的来源可以参考一下<a href="http://en.wikipedia.org/wiki/Das_Keyboard">wikipedia</a>，不过我不喜欢104键的键盘，而且价格也不便宜。</p></li>
<li><p>接下来就是一些很普通的键盘了，网上说机械键盘最重要的就是轴(switch)，最好的轴当然是德国樱桃(cherry)的原厂轴了。现在主要的樱桃轴是按照颜色来分的，有红轴(red switch)，黑轴(black switch)，青轴(blue switch)，茶轴(brown switch)，以及一些不太起眼的轴。在这四大主力轴中，黑轴公认的玩游戏最爽，红轴声音小，直上直下，青轴最吵，不过打字最爽。茶轴介于青轴和红轴之间，是新出的一款轴。</p></li>
</ul>


<p>我的这款poker 2是kbc产的，一个国产品牌，但是不得不说做工很不错，小巧紧凑，该有的功能都有了，以后估计可以纯键盘办公了。87和104一个很大的区别就是没有小键盘，所以要按方向键，翻页键都得通过FN组合来实现。对我来说有点不方便，因为我的urxvt的设定是<code>shift+downarrow</code>来实现新建标签的，已经习惯这种快捷键了。现在得按<code>shift+fn+s</code>才能打开一个新的urxvt标签，在考虑是改改urxvt的设置还是改改键盘映射。</p>

<p>底下的win键倒是很符合我的需要。现在用的是xmonad的窗口管理器，我之前设置的快捷键是<code>mod1mask+[1..9]</code>来切换窗口的，现在不需要怎么改就能直接用win键。</p>

<p>打开火狐浏览器的时候突然发现没有上下方向键不好滚动页面了，而且没有了左方向键回到前一页也不方便了。不过发现了一个解决办法。要滚动页面可以考虑<code>fn+[s,w]</code>，或者是<code>[fn+space]然后[w,s]</code>。因为[fn+space]会把asdw变成方向键。要回到前一个页面就不太方便了，我想了一下可以把<code>[backspace]</code>设置为回到前一页的快捷键。不过这个得改firefox的快捷键设置。在地址栏输入<code>about:config</code>，然后找到<code>browser.backspace_action</code>，我这里默认的是2,也就是说shift加左箭头可以回到前一页，不过我想把这个值设置为0,这样就是<code>backspace</code>来回到前一页了。</p>

<p>几个大按键不太好，声音和普通按键不同，有点滞胀感。问了卖家，他说这是正常情况，因为大的shift用了一个平衡杆来感应按键，虽然很不爽，但是还是忍忍吧，以后有钱了买个好的键盘，现在这个就先拿来练练手。</p>
]]></content>
  </entry>
  
</feed>
